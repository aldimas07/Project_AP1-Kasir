/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package a;

import static a.Menu.con;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Random;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import project_ap1_kasir.koneksi;

/**
 *
 * @author ACER
 */
public class setelah_pesan extends javax.swing.JFrame {

    /**
     * Creates new form setelah_pesan
     */
    public static Connection con = new koneksi().ambil_koneksi();

    public setelah_pesan() {
        initComponents();
        jPanel1.setBackground(new Color(0, 0, 0, 0));
        jPanel2.setBackground(new Color(0, 0, 0, 0));
//        jPanel3.setBackground(new Color(0, 0, 0, 20));
//        lbl_jumlahpesanan.setBackground(new Color(0, 0, 0, 0));
        tampilJList();
//        lbl_jumlahpesanan.setText("");
    }

    private void tampilJList() {
        try {

            DefaultListModel model = new DefaultListModel(); //create a new list model

            Statement state = con.createStatement();
            ResultSet resultSet = state.executeQuery("SELECT NO_ANTRIAN FROM `transaksi` group by NO_ANTRIAN;"); //run your query

            while (resultSet.next()) //go through each row that your query returns
            {
                String itemCode = resultSet.getString("NO_ANTRIAN"); //get the element in column "item_code"
                model.addElement(itemCode); //add each item to the model
            }
            jList1.setModel(model);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

//    private void updatetable() {
//        try {
//            String ls_antrian = String.valueOf(jList1.getModel().getElementAt(jList1.getSelectedIndex()));
//            String sql = "select transaksi.id_menu, makanan.nama_makanan, transaksi.jumlah_pesanan, sum(menu.harga * transaksi.jumlah_pesanan) AS HARGA from transaksi"
//                    + " inner join makanan on makanan.id_menu = transaksi.id_menu"
//                    + " inner join menu on menu.id_menu = transaksi.id_menu"
//                    + " where transaksi.no_antrian = '" + ls_antrian + "'group by menu.id_menu";
//
////            String sql2 = "select transaksi.id_menu, minuman.nama_minuman, transaksi.jumlah_pesanan, sum(menu.harga * transaksi.jumlah_pesanan) from transaksi"
////                    + " inner join minuman on minuman.id_menu = transaksi.id_menu"
////                    + " inner join menu on menu.id_menu = transaksi.id_menu"
////                    + " where transaksi.no_antrian = '"+ls_antrian+"'group by menu.id_menu";
//            PreparedStatement pst = (PreparedStatement) con.prepareStatement(sql);
//            ResultSet rs = pst.executeQuery();
//            ResultSetMetaData stData = rs.getMetaData();
//            int q = stData.getColumnCount();
//
//            DefaultTableModel tb_transaksi = (DefaultTableModel) jTable2.getModel();
//            tb_transaksi.setColumnCount(0);
//
//            while (rs.next()) {
//                Vector columndata = new Vector();
//                for (int i = 1; i < q; i++) {
//                    columndata.add(rs.getString("ID_MENU"));
//                    columndata.add(rs.getString("NAMA_MAKANAN"));
//                    columndata.add(rs.getString("JUMLAH_PESANAN"));
//                    columndata.add(rs.getString("HARGA"));
//                }
//                tb_transaksi.addRow(columndata);
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_batalkan = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        lb_konfirm = new javax.swing.JLabel();
        lb_exit = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_batalkan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_batalkanMouseClicked(evt);
            }
        });
        getContentPane().add(lb_batalkan, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 520, 140, 30));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Pembayaran");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 60, -1, -1));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Tunai");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 60, 80, -1));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 40, 40, 10));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Jumlah Pesanan Rp.");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, 130, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Daftar Pesanan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "NO_ANTRIANX", "NO_ANTRIANX", "NO_ANTRIANX", "NO_ANTRIANX", "NO_ANTRIANX" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 540));

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_Menu", "Nama_Menu", "Jumlah", "Jumlah Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel2.add(jScrollPane1);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 420, 540));

        lb_konfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_konfirmMouseClicked(evt);
            }
        });
        getContentPane().add(lb_konfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 470, 150, 30));

        lb_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_exitMouseClicked(evt);
            }
        });
        getContentPane().add(lb_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(762, 5, 20, 20));

        bg.setBackground(new java.awt.Color(255, 255, 153));
        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/sng jare rizal.jpg"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        try {
            int harga_asli = 0;
            String ls_antrian = String.valueOf(jList1.getModel().getElementAt(jList1.getSelectedIndex()));
            System.out.println(ls_antrian);
//            String sql = "select transaksi.id_menu, makanan.nama_makanan, menu.harga, transaksi.jumlah_pesanan from transaksi"
//                    + " inner join makanan on makanan.id_menu = transaksi.id_menu"
//                    + " inner join menu on menu.id_menu = transaksi.id_menu"
//                    + " inner join pelanggan on pelanggan.no_antrian = transaksi.no_antrian"
//                    + " inner join metode_pembayaran on metode_pembayaran.no_antrian = pelanggan.no_antrian"
//                    + " where transaksi.no_antrian = '" + ls_antrian + "'";
            String sql = "select transaksi.id_menu, makanan.nama_makanan, menu.harga, transaksi.jumlah_pesanan, pembayaran.NAMA from transaksi inner join makanan on makanan.id_menu = transaksi.id_menu inner join menu on menu.id_menu = transaksi.id_menu inner join pelanggan on pelanggan.no_antrian = transaksi.no_antrian inner join pembayaran on pembayaran.ID_PEMBAYARAN = transaksi.ID_PEMBAYARAN where transaksi.no_antrian = '" + ls_antrian + "'";
            System.out.println();
            

//            String sql2 = "select transaksi.id_menu, minuman.nama_minuman, transaksi.jumlah_pesanan, sum(menu.harga * transaksi.jumlah_pesanan) from transaksi"
//                    + " inner join minuman on minuman.id_menu = transaksi.id_menu"
//                    + " inner join menu on menu.id_menu = transaksi.id_menu"
//                    + " where transaksi.no_antrian = '"+ls_antrian+"'group by menu.id_menu";
            PreparedStatement pst = (PreparedStatement) con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel tb_transaksi = (DefaultTableModel) jTable2.getModel();
            tb_transaksi.setRowCount(0);
            String pembayaran = "";

            while (rs.next()) {
                String ls_idmenu = rs.getString("ID_MENU");
//                System.out.println(ls_idmenu);
                String ls_namamenu = rs.getString("NAMA_MAKANAN");
//                System.out.println(ls_namamenu);
                String ls_jumlah = rs.getString("JUMLAH_PESANAN");
//                System.out.println(ls_jumlah);
                int ls_harga = rs.getInt("HARGA");
                harga_asli = harga_asli + (ls_harga * Integer.valueOf(ls_jumlah));
//                System.out.println(harga_asli);
                int ls_harga_asli = ls_harga * Integer.valueOf(ls_jumlah);
//                System.out.println(ls_jumlah);
                pembayaran = rs.getString("NAMA");

                Vector columndata = new Vector();
                columndata.add(ls_idmenu);
                columndata.add(ls_namamenu);
                columndata.add(ls_jumlah);
                columndata.add(ls_harga_asli);

                tb_transaksi.addRow(columndata);
            }
            jLabel4.setText(pembayaran);
//            jLabel3.setText(String.valueOf(harga_asli));
            
            String sql_min = "select transaksi.id_menu, minuman.nama_minuman, menu.harga, transaksi.jumlah_pesanan, pembayaran.NAMA from transaksi \n" +
"inner join minuman on minuman.id_menu = transaksi.id_menu \n" +
"inner join menu on menu.id_menu = transaksi.id_menu \n" +
"inner join pelanggan on pelanggan.no_antrian = transaksi.no_antrian \n" +
"inner join pembayaran on pembayaran.ID_PEMBAYARAN = transaksi.ID_PEMBAYARAN\n" +
"where transaksi.no_antrian = '" + ls_antrian +"'";

//            String sql2 = "select transaksi.id_menu, minuman.nama_minuman, transaksi.jumlah_pesanan, sum(menu.harga * transaksi.jumlah_pesanan) from transaksi"
//                    + " inner join minuman on minuman.id_menu = transaksi.id_menu"
//                    + " inner join menu on menu.id_menu = transaksi.id_menu"
//                    + " where transaksi.no_antrian = '"+ls_antrian+"'group by menu.id_menu";
            PreparedStatement pst_min = (PreparedStatement) con.prepareStatement(sql_min);
            rs = pst_min.executeQuery();
            while (rs.next()) {
                String ls_idmenu = rs.getString("ID_MENU");
//                System.out.println(ls_idmenu);
                String ls_namamenu = rs.getString("NAMA_MINUMAN");
//                System.out.println(ls_namamenu);
                String ls_jumlah = rs.getString("JUMLAH_PESANAN");
//                System.out.println(ls_jumlah);
                int ls_harga = rs.getInt("HARGA");
                harga_asli = harga_asli + (ls_harga * Integer.valueOf(ls_jumlah));
//                System.out.println(harga_asli);
                int ls_harga_asli = ls_harga * Integer.valueOf(ls_jumlah);
//                lbl_jumlahpesanan.setText("");
//                lbl_jumlahpesanan.setText(String.valueOf(harga_asli));
//                System.out.println(ls_jumlah);
                Vector columndata = new Vector();
                columndata.add(ls_idmenu);
                columndata.add(ls_namamenu);
                columndata.add(ls_jumlah);
                columndata.add(ls_harga_asli);

                tb_transaksi.addRow(columndata);
                
                jLabel4.setText(rs.getString("NAMA"));
            }
            

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }


    }//GEN-LAST:event_jList1MouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void lb_konfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_konfirmMouseClicked
        // TODO add your handling code here:
        String ls_antrian = String.valueOf(jList1.getModel().getElementAt(jList1.getSelectedIndex()));

        if (ls_antrian == null && ls_antrian == "") {
            JOptionPane.showMessageDialog(this, "Silahkan pilih salah satu nomor antrian!");
            
        } else {
            
            int opsi = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin memproses pesanan ini?");
            if (opsi == JOptionPane.YES_OPTION) {
                
                try {
//                    String sql1 = "SELECT transaksi.ID_TRANSAKSI, transaksi.ID_PEMBAYARAN, riwayat_pesanan.STATUS, transaksi.NO_ANTRIAN FROM transaksi"
//                            + "INNER JOIN riwayat_pesanan ON riwayat_pesanan.ID_PESANAN = transaksi.ID_PESANAN where transaksi.NO_ANTRIAN = '" + ls_antrian + "'";
                      String sql1 = "SELECT transaksi.ID_TRANSAKSI, transaksi.ID_PEMBAYARAN, riwayat_pesanan.STATUS, transaksi.NO_ANTRIAN FROM transaksi INNER JOIN riwayat_pesanan ON riwayat_pesanan.NO_ANTRIAN = transaksi.NO_ANTRIAN where transaksi.NO_ANTRIAN = '" + ls_antrian + "'";
                    System.out.println(sql1);
//                String sql1 = "SELECT * FROM transaksi INNER JOIN riwayat_pesanan ON riwayat_pesanan.ID_PESANAN = transaksi.ID_PESANAN "
//                        + "WHERE transaksi.NO_ANTRIAN = '"+ls_antrian+"'";
                    PreparedStatement pst = (PreparedStatement) con.prepareStatement(sql1);
//                    pst.setString(3, ls_antrian);
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {
                        PreparedStatement ps_tunggu = (PreparedStatement) con.prepareStatement("UPDATE riwayat_pesanan SET status = 'Menunggu' WHERE riwayat_pesanan.NO_ANTRIAN = ?");
                        ps_tunggu.setString(1, ls_antrian);
                        ps_tunggu.executeUpdate();
                    }
                    JOptionPane.showMessageDialog(this, "Pesanan berhasil diteruskan");
                    pesanan pesan = new pesanan();
                    pesan.setVisible(true);
                    this.setVisible(false);
                } catch (Exception e) {
                    System.out.println(e.getMessage()+" - button konfirmasi setelah_pesan");
                }

            } else {
                JOptionPane.showMessageDialog(this, "Batal memproses pesanan!");
            }
        }
    }//GEN-LAST:event_lb_konfirmMouseClicked

    private void lb_batalkanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_batalkanMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Pesanan dibatalkan!");
        jTable2.clearSelection();
        jList1.clearSelection();

//        lbl_jumlahpesanan.setText("");
    }//GEN-LAST:event_lb_batalkanMouseClicked

    private void lb_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        Index i = new Index();
        i.setVisible(true);
    }//GEN-LAST:event_lb_exitMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setelah_pesan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setelah_pesan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setelah_pesan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setelah_pesan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new setelah_pesan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lb_batalkan;
    private javax.swing.JLabel lb_exit;
    private javax.swing.JLabel lb_konfirm;
    // End of variables declaration//GEN-END:variables
}
